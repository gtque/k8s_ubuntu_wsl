apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "elasticsearch"
  namespace: "infrastructure"
  labels:
    app.kubernetes.io/name: "elasticsearch"
    app.kubernetes.io/managed-by: "local"
    app.kubernetes.io/version: "7.8.1"
    app.kubernetes.io/component: "elasticsearch"
    app.kubernetes.io/part-of: "infrastructure"
spec:
  replicas: 1
  serviceName: "elasticsearch"
  selector:
    matchLabels:
      app.kubernetes.io/name: "elasticsearch"
  template:
    metadata:
      annotations:
        app.kubernetes.io/instance: "elasticsearch"
        app.kubernetes.io/name: "elasticsearch"
        app.kubernetes.io/managed-by: "local"
        app.kubernetes.io/version: "7.8.1"
        app.kubernetes.io/component: "elasticsearch"
        app.kubernetes.io/part-of: "infrastructure"
      labels:
        app.kubernetes.io/instance: "elasticsearch"
        app.kubernetes.io/name: "elasticsearch"
        app.kubernetes.io/managed-by: "local"
        app.kubernetes.io/version: "7.8.1"
        app.kubernetes.io/component: "elasticsearch"
        app.kubernetes.io/part-of: "infrastructure"
    spec:
      serviceAccountName: "elasticsearch"
      containers:
      - name: app
        image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
        imagePullPolicy: "IfNotPresent"
        env:
        - name: cluster.name
          value: "docker-cluster"
        - name: bootstrap.memory_lock
          value: "true"
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        - name: discovery.type
          value: "single-node"
        - name: TZ
          value: "US/Eastern"
        ports:
        - containerPort: 9200
        - containerPort: 9300
        livenessProbe:
          httpGet:
            path: /_cat/health
            port: 9200
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: elastic-data
          mountPath: /usr/share/elasticsearch/data
  volumeClaimTemplates:
  - metadata:
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
      name: "elastic-data"
      namespace: "infrastructure"
      labels:
        app.kubernetes.io/instance: "elasticsearch"
        app.kubernetes.io/name: "elasticsearch"
        app.kubernetes.io/version: "7.8.1"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "microk8s-hostpath"
      resources:
        requests:
          storage: 5Gi