/*
 * Copyright (c) 2023. Eric Angeli
 *
 *  Permission is hereby granted, free of charge,
 *  to any person obtaining a copy of this software
 *  and associated documentation files (the "Software"),
 *  to deal in the Software without restriction,
 *  including without limitation the rights to use, copy,
 *  modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit
 *  persons to whom the Software is furnished to do so,
 *  subject to the following conditions:
 *
 *  The above copyright notice and this permission
 *  notice shall be included in all copies or substantial
 *  portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
 *  AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *  DEALINGS IN THE SOFTWARE.
 */
import com.thegoate.gradle.GoateDepends;

dependencies {
    GoateDepends d = new GoateDepends(project, "thehangingpen", project.javaVersion);
    implementation "io.springfox:springfox-swagger2:2.9.2"
    implementation "io.springfox:springfox-swagger-ui:2.9.2"
    implementation "org.springframework.boot:spring-boot-starter-web"
//    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.cloud:spring-cloud-starter-kubernetes-client-all:3.1.0"
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
//    implementation "org.springframework.cloud:spring-cloud-starter-bootstrap:4.1.0"
//    testImplementation "org.springframework:spring-test:5.3.23"
//    testImplementation "org.springframework:spring-tx:5.3.23"
//    testImplementation "org.springframework.boot:spring-boot-test"
}

jar {
    manifest.attributes["Main-Class"] = "com.thegoate.examples.poc.SimpleServer"
}

//task jarJar(type: Jar) {
//    manifest.attributes["Main-Class"] = "com.thegoate.examples.poc.SimpleServer"
//    from sourceSets.main.output
//    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//    dependsOn configurations.runtimeClasspath
//    from {
//        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
//    }
//    exclude("META-INF/*.RSA", "META-INF/*.DSA", "META-INF/*.SF")
//}